version: "3.8"

services:
  web-app:
    container_name: web_app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    networks:
      - web_app_network
    env_file:
      - .env
    environment:
      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
    ports:
      - "8000:8000"
    command: >
      sh -c "alembic upgrade head && uvicorn src.main:app --reload --host 0.0.0.0 --port 8000"
    restart: always
    depends_on:
      - database
      - redis

  database:
    image: postgres:15.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_INITDB_ARGS="--auth=md5"
    ports:
      - "${DB_PORT}:5432"
    expose:
      - 5432
    networks:
      - web_app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d fastapi_intern" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7.0.5-alpine
    container_name: 'redis-cache'
    hostname: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - web_app_network
    command: [ "redis-server" ]

networks:
  web_app_network:
    name: web_app_network
    driver: bridge
